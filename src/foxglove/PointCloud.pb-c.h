/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: foxglove/PointCloud.proto */

#ifndef PROTOBUF_C_foxglove_2fPointCloud_2eproto__INCLUDED
#define PROTOBUF_C_foxglove_2fPointCloud_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1003000
# error This file was generated by a newer version of protobuf-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1005002 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protobuf-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protobuf-c.
#endif

#include "foxglove/PackedElementField.pb-c.h"
#include "foxglove/Pose.pb-c.h"
#include "google/protobuf/timestamp.pb-c.h"

typedef struct Foxglove__PointCloud Foxglove__PointCloud;


/* --- enums --- */


/* --- messages --- */

/*
 * A collection of N-dimensional points, which may contain additional fields with information like normals, intensity, etc.
 */
struct  Foxglove__PointCloud
{
  ProtobufCMessage base;
  /*
   * Timestamp of point cloud
   */
  Google__Protobuf__Timestamp *timestamp;
  /*
   * Frame of reference
   */
  char *frame_id;
  /*
   * The origin of the point cloud relative to the frame of reference
   */
  Foxglove__Pose *pose;
  /*
   * Number of bytes between points in the `data`
   */
  uint32_t point_stride;
  /*
   * Fields in `data`. At least 2 coordinate fields from `x`, `y`, and `z` are required for each point's position; `red`, `green`, `blue`, and `alpha` are optional for customizing each point's color.
   */
  size_t n_fields;
  Foxglove__PackedElementField **fields;
  /*
   * Point data, interpreted using `fields`
   */
  ProtobufCBinaryData data;
};
#define FOXGLOVE__POINT_CLOUD__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&foxglove__point_cloud__descriptor) \
, NULL, (char *)protobuf_c_empty_string, NULL, 0, 0,NULL, {0,NULL} }


/* Foxglove__PointCloud methods */
void   foxglove__point_cloud__init
                     (Foxglove__PointCloud         *message);
size_t foxglove__point_cloud__get_packed_size
                     (const Foxglove__PointCloud   *message);
size_t foxglove__point_cloud__pack
                     (const Foxglove__PointCloud   *message,
                      uint8_t             *out);
size_t foxglove__point_cloud__pack_to_buffer
                     (const Foxglove__PointCloud   *message,
                      ProtobufCBuffer     *buffer);
Foxglove__PointCloud *
       foxglove__point_cloud__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   foxglove__point_cloud__free_unpacked
                     (Foxglove__PointCloud *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Foxglove__PointCloud_Closure)
                 (const Foxglove__PointCloud *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor foxglove__point_cloud__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_foxglove_2fPointCloud_2eproto__INCLUDED */
