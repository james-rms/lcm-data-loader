/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: foxglove/PosesInFrame.proto */

#ifndef PROTOBUF_C_foxglove_2fPosesInFrame_2eproto__INCLUDED
#define PROTOBUF_C_foxglove_2fPosesInFrame_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1003000
# error This file was generated by a newer version of protobuf-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1005002 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protobuf-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protobuf-c.
#endif

#include "foxglove/Pose.pb-c.h"
#include "google/protobuf/timestamp.pb-c.h"

typedef struct Foxglove__PosesInFrame Foxglove__PosesInFrame;


/* --- enums --- */


/* --- messages --- */

/*
 * An array of timestamped poses for an object or reference frame in 3D space
 */
struct  Foxglove__PosesInFrame
{
  ProtobufCMessage base;
  /*
   * Timestamp of pose
   */
  Google__Protobuf__Timestamp *timestamp;
  /*
   * Frame of reference for pose position and orientation
   */
  char *frame_id;
  /*
   * Poses in 3D space
   */
  size_t n_poses;
  Foxglove__Pose **poses;
};
#define FOXGLOVE__POSES_IN_FRAME__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&foxglove__poses_in_frame__descriptor) \
, NULL, (char *)protobuf_c_empty_string, 0,NULL }


/* Foxglove__PosesInFrame methods */
void   foxglove__poses_in_frame__init
                     (Foxglove__PosesInFrame         *message);
size_t foxglove__poses_in_frame__get_packed_size
                     (const Foxglove__PosesInFrame   *message);
size_t foxglove__poses_in_frame__pack
                     (const Foxglove__PosesInFrame   *message,
                      uint8_t             *out);
size_t foxglove__poses_in_frame__pack_to_buffer
                     (const Foxglove__PosesInFrame   *message,
                      ProtobufCBuffer     *buffer);
Foxglove__PosesInFrame *
       foxglove__poses_in_frame__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   foxglove__poses_in_frame__free_unpacked
                     (Foxglove__PosesInFrame *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Foxglove__PosesInFrame_Closure)
                 (const Foxglove__PosesInFrame *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor foxglove__poses_in_frame__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_foxglove_2fPosesInFrame_2eproto__INCLUDED */
